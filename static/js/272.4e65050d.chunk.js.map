{"version":3,"file":"static/js/272.4e65050d.chunk.js","mappings":"oIAAA,IAAMA,EAAM,+BA0CNC,EAAM,CAACC,kBAxCa,WAIxB,OAAOC,MAAM,GAAD,OAAIH,GAAJ,OAFM,oBAEN,oBAHI,mCAGJ,2BACXI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GACf,EAkC+BC,gBAhCR,SAACC,GAIvB,OAAOL,MAAM,GAAD,OAAIH,GAAJ,OAFM,gBAEN,oBAHI,mCAGJ,kBAAgDQ,EAAhD,2BACXJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GACf,EA0BgDG,iBAxBxB,SAACC,GACxB,IACMC,EAAS,iBAAaD,GAE5B,OAAOP,MAAM,GAAD,OAAIH,GAAJ,OAAUW,EAAV,oBAHI,mCAGJ,2BACXP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GACf,EAkBkEM,iBAhB1C,SAACF,GACxB,IACMC,EAAS,iBAAaD,EAAb,YAEf,OAAOP,MAAM,GAAD,OAAIH,GAAJ,OAAUW,EAAV,oBAHI,mCAGJ,2BACXP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GACf,EAUoFO,iBAR5D,SAACH,GACxB,IACMC,EAAS,iBAAaD,EAAb,YAEf,OAAOP,MAAM,GAAD,OAAIH,GAAJ,OAAUW,EAAV,oBAHI,mCAGJ,2BACXP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GACf,GAGD,K,oHCvCe,SAASQ,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAAMC,EAAAA,EAAAA,MAAND,GAMP,OAJAE,EAAAA,EAAAA,YAAU,WACNnB,EAAAA,EAAAA,iBAAqBiB,GAAId,MAAK,SAAAiB,GAAC,OAAIJ,EAAWI,EAAEC,QAAjB,IAA2BC,OAAM,SAAAC,GAAG,OAAIC,MAAM,GAAD,OAAID,GAAb,GACtE,GAAC,CAACN,KAGC,iCACI,wBACKF,GAAWA,EAAQU,KAAI,SAAAC,GAAM,OAC9B,2BACI,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFNF,EAAOT,GADc,MAOd,IAAnBF,EAAQc,SAAgB,uBAAG,+CAGvC,C","sources":["components/themoviedbAPI.js","pages/MoviesDetails/Reviews/Reviews.js"],"sourcesContent":["const URL = 'https://api.themoviedb.org/3'\n\nconst getTrendingMovies = () => {\n  const api_key = '80849c20aa63241eb028c4e7b7d0f3a8';\n  const getMovies = '/trending/all/day';\n\n  return fetch(`${URL}${getMovies}?api_key=${api_key}&page=1&language=en-US`)\n  .then(response => response.json())\n};\n\nconst getSearchMovies = (text) => {\n  const api_key = '80849c20aa63241eb028c4e7b7d0f3a8';\n  const getMovies = '/search/movie';\n\n  return fetch(`${URL}${getMovies}?api_key=${api_key}&query=${text}&page=1&language=en-US`)\n  .then(response => response.json())\n};\n\nconst getDetailsMovies = (movie_id) => {\n  const api_key = '80849c20aa63241eb028c4e7b7d0f3a8';\n  const getMovies = `/movie/${movie_id}`;\n  \n  return fetch(`${URL}${getMovies}?api_key=${api_key}&page=1&language=en-US`)\n  .then(response => response.json())\n};\n\nconst getCreditsMovies = (movie_id) => {\n  const api_key = '80849c20aa63241eb028c4e7b7d0f3a8';\n  const getMovies = `/movie/${movie_id}/credits`;\n\n  return fetch(`${URL}${getMovies}?api_key=${api_key}&page=1&language=en-US`)\n  .then(response => response.json())\n};\n\nconst getReviewsMovies = (movie_id) => {\n  const api_key = '80849c20aa63241eb028c4e7b7d0f3a8';\n  const getMovies = `/movie/${movie_id}/reviews`;\n\n  return fetch(`${URL}${getMovies}?api_key=${api_key}&page=1&language=en-US`)\n  .then(response => response.json())\n};\n\nconst get = {getTrendingMovies, getSearchMovies, getDetailsMovies, getCreditsMovies, getReviewsMovies}\nexport default get","import get from \"../../../components/themoviedbAPI\"\nimport { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\";\n\nexport default function Reviews () {\n    const [reviews, setReviews] = useState([])\n    const {id} = useParams()\n    \n    useEffect(() => {\n        get.getReviewsMovies(id).then(r => setReviews(r.results)).catch(err => alert(`${err}`));\n    },[id]);\n\n    return (\n        <>\n            <ul>\n                {reviews && reviews.map(review => (\n                <li key={review.id}>\n                    <p>Author: {review.author}</p>\n                    <p>{review.content}</p>\n                </li>\n            ))}\n            </ul>\n            {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\n        </>\n    )\n}"],"names":["URL","get","getTrendingMovies","fetch","then","response","json","getSearchMovies","text","getDetailsMovies","movie_id","getMovies","getCreditsMovies","getReviewsMovies","Reviews","useState","reviews","setReviews","id","useParams","useEffect","r","results","catch","err","alert","map","review","author","content","length"],"sourceRoot":""}